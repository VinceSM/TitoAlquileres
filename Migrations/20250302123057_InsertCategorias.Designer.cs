// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TitoAlquiler.Migrations
{
    [DbContext(typeof(SistemaAlquilerContext))]
    [Migration("20250302123057_InsertCategorias")]
    partial class InsertCategorias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Alquileres", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ItemID")
                        .HasColumnType("int")
                        .HasColumnName("itemId");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("usuarioId");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletedAt");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaFin");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaInicio");

                    b.Property<double>("precioTotal")
                        .HasColumnType("float")
                        .HasColumnName("precioTotal");

                    b.Property<int>("tiempoDias")
                        .HasColumnType("int")
                        .HasColumnName("tiempoDias");

                    b.Property<string>("tipoEstrategia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoEstrategia");

                    b.HasKey("id");

                    b.HasIndex("ItemID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Alquileres", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletedAt");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.HasKey("id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Electrodomestico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("itemid")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("potenciaWatts")
                        .HasColumnType("int")
                        .HasColumnName("potenciaWatts");

                    b.Property<string>("tipoElectrodomestico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoElectrodomestico");

                    b.HasKey("id");

                    b.HasIndex("itemid")
                        .IsUnique();

                    b.HasIndex("itemid");

                    b.ToTable("Electrodomesticos", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Electronica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("almacenamientoGB")
                        .HasColumnType("int")
                        .HasColumnName("almacenamientoGB");

                    b.Property<int>("itemid")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<string>("resolucionPantalla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("resolucionPantalla");

                    b.HasKey("id");

                    b.HasIndex("itemid")
                        .IsUnique();

                    b.HasIndex("itemid");

                    b.ToTable("Electronicas", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Indumentaria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("itemid")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<string>("material")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("material");

                    b.Property<string>("talla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("talla");

                    b.HasKey("id");

                    b.HasIndex("itemid")
                        .IsUnique();

                    b.HasIndex("itemid");

                    b.ToTable("Indumentarias", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Inmueble", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("itemid")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("metrosCuadrados")
                        .HasColumnType("int")
                        .HasColumnName("metrosCuadrados");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ubicacion");

                    b.HasKey("id");

                    b.HasIndex("itemid")
                        .IsUnique();

                    b.HasIndex("itemid");

                    b.ToTable("Inmuebles", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Transporte", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("capacidadPasajeros")
                        .HasColumnType("int")
                        .HasColumnName("capacidadPasajeros");

                    b.Property<int>("itemid")
                        .HasColumnType("int")
                        .HasColumnName("itemid");

                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<string>("tipoCombustible")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoCombustible");

                    b.HasKey("id");

                    b.HasIndex("itemid")
                        .IsUnique();

                    b.HasIndex("itemid");

                    b.ToTable("Transportes", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("categoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoriaId");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletedAt");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("marca");

                    b.Property<string>("modelo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modelo");

                    b.Property<string>("nombreItem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombreItem");

                    b.Property<double>("tarifaDia")
                        .HasColumnType("float")
                        .HasColumnName("tarifaDia");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.ToTable("Items", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletedAt");

                    b.Property<int>("dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<bool>("membresiaPremium")
                        .HasColumnType("bit")
                        .HasColumnName("membresiaPremium");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.HasKey("id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Alquileres", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Item", "item")
                        .WithMany("Alquileres")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TitoAlquiler.Model.Entities.Usuarios", "usuario")
                        .WithMany("Alquileres")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("item");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Electrodomestico", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("TitoAlquiler.Model.Entities.Categorias.Electrodomestico", "itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TitoAlquiler.Model.Entities.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Electronica", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("TitoAlquiler.Model.Entities.Categorias.Electronica", "itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TitoAlquiler.Model.Entities.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Indumentaria", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("TitoAlquiler.Model.Entities.Categorias.Indumentaria", "itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TitoAlquiler.Model.Entities.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Inmueble", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("TitoAlquiler.Model.Entities.Categorias.Inmueble", "itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TitoAlquiler.Model.Entities.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categorias.Transporte", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Item", null)
                        .WithOne()
                        .HasForeignKey("TitoAlquiler.Model.Entities.Categorias.Transporte", "itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TitoAlquiler.Model.Entities.Item", "item")
                        .WithMany()
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Item", b =>
                {
                    b.HasOne("TitoAlquiler.Model.Entities.Categoria", "categoria")
                        .WithMany("items")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Categoria", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Item", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("TitoAlquiler.Model.Entities.Usuarios", b =>
                {
                    b.Navigation("Alquileres");
                });
#pragma warning restore 612, 618
        }
    }
}
